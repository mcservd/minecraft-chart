apiVersion: apps/v1
kind: Deployment
metadata:
  name: minecraft
  labels:
    name: minecraft
    version: {{ .Values.minecraft.version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: minecraft
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: minecraft
    spec:
      containers:
        - name: minecraft
          image: "{{ .Values.image.repository }}:{{ .Values.minecraft.version }}"
          imagePullPolicy: Always
          command:
            - "java"
            - "-jar"
            - "-Xmx4G"
            - "server.jar"
            - "--nogui"
          ports:
           - containerPort: 25565
          resources:
            requests:
              cpu: {{ .Values.minecraft.resources.cpu }}
              memory: {{ .Values.minecraft.resources.memory }}
            limits:
              cpu: {{ .Values.minecraft.resources.cpu }}
              memory: {{ .Values.minecraft.resources.memory }}
          startupProbe:
            tcpSocket:
              port: 25565
            initialDelaySeconds: 50
            periodSeconds: 10
            failureThreshold: 10
          livenessProbe:
            tcpSocket:
              port: 25565
            periodSeconds: 20
            failureThreshold: 10
          volumeMounts:
            - name: minecraft-configmap-volume
              mountPath: /opt/minecraft/eula.txt
              subPath: eula.txt
            - name: minecraft-configmap-volume
              mountPath: /opt/minecraft/server.properties
              subPath: server.properties
            - name: minecraft-world-pvc-volume
              mountPath: /opt/minecraft/world
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      volumes:
        - name: minecraft-configmap-volume
          configMap:
            name: minecraft
        - name: minecraft-world-pvc-volume
          persistentVolumeClaim:
            claimName: minecraft-world-pvc
